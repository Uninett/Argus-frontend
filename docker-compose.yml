version: '3.5'
services:
  frontend:
    build: .
    ports:
      - "8080:8080"
    volumes:
      - .:/app:Z
    # If npm refuses to start, you may need to use the `node` user instead of
    # ${UID}. However, on Linux, the latter might cause issues with file
    # permissions in the `/app` bind-mount.
    user: ${UID}
    environment:
      - CI=true
      - REACT_APP_BACKEND_URL=http://localhost:8000
      - REACT_APP_ENABLE_WEBSOCKETS_SUPPORT=true
      - REACT_APP_BACKEND_WS_URL=ws://localhost:8000/ws
      - REACT_APP_USE_SECURE_COOKIE=false
      - REACT_APP_DEBUG=true

  api:
    build:
      context: docker/api
      args:
        BRANCH: master

    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    environment:
      - TIME_ZONE=Europe/Oslo
      - DJANGO_SETTINGS_MODULE=dockerdev
      - DATABASE_URL=postgresql://argus:HahF9araeKoo@postgres/argus
      - ARGUS_FRONTEND_URL=http://localhost:8080
      - ARGUS_REDIS_SERVER=redis


  postgres:
    image: "postgres:14"
    volumes:
      - postgres:/var/lib/postgresql/data:Z
    environment:
      - POSTGRES_USER=argus
      - POSTGRES_PASSWORD=HahF9araeKoo
      - POSTGRES_DB=argus


  redis:
    image: "redis:latest"


volumes:
  postgres:
    driver: local
